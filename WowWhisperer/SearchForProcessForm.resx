<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AOrv6wAQEBAAEBAQABAQEAAQEBAAEBAQABAQEAAQEBAAEBAQABAQEAAQEBAAEBAQABAQ
        EAAQEBAAEBAQABAQEAAQEBAAEBAQABAQEAAQEBAAEBAQABAQEAAQEBAAEBAQABAQEAAQERAAEhISAOrv
        6wzq7+ts6u/rxurv6/bq7+uH6u/rABAREAAQERAAEBEQABAREAAQERAAEBEQABAREAAQERAAEBEQABAR
        EAAQERAAEBEQABAREAAQERAAERERABITEgAUFRQAFhYWABYXFgAXFxcAFxcXABYXFgAWFhYAFBUUABQV
        FADq7+sk3+Tg3Zeal/9QUVD/ISEh+xUWFYfq7+sAEBEQABAREAAQERAAEBEQABAREAAQERAAEBEQABAR
        EAAQERAAEBEQABAREAAQERAAERERABMTEwAWFhYA6u/rSOrv65/q7+vb6u/r/+rv6//q7+v/6u/r/+rv
        69jq7+uc6u/rYMvQzO1DREP/Jygn/yAhIP8YGRiFERIRAOrv6wAREREAERERABEREQAREREAERERABER
        EQAREREAERERABEREQAREREAERERABISEgAVFhUA6u/rUerv69WytrP/cHNx/0RGRP8qKyr/Kisq/yor
        Kv8qKyr/R0hH/3N1dP+hpKH/OTo5/yorKv8lJiX/Kisq0hMTEwMREREA6u/rABESEQAREhEAERIRABES
        EQAREhEAERIRABESEQAREhEAERIRABESEQASExIA6u/rBurv66Ksr6z/SUpJ/yssK/8rLCv/Kywr/yss
        K/8rLCv/Kywr/yssK/8rLCv/Kywr/yssK/8rLCv/Kywr/yYmJv8hIiFBExMTABESEQDq7+sAEhISABIS
        EgASEhIAEhISABISEgASEhIAEhISABISEgASEhIAEhMSAOrv6wbj6OSwb3Fv/yssK/8sLSz/LC0s/ywt
        LP8sLSz/LC0s/ywtLP8sLSz/LC0s/ywtLP8sLSz/LC0s/ywtLP8sLSz/OTo5/+br56nq7+sDEhMSAOrv
        6wASEhIAEhISABISEgASEhIAEhISABISEgASEhIAEhISABITEgAWFhYA4OXhhGZoZ/8sLSz/LS4t/y0u
        Lf8tLi3/LS4t/y0uLf8tLi3/LS4t/y0uLf8tLi3/LS4t/y0uLf8tLi3/LS4t/y0uLf8sLSz/am1r/+Xq
        5ncWFhYA6u/rABgZGAAXGBcAFRYVABMUEwATExMAEhMSABITEgASExIAExMTAOrv6yeDhYP8Jygn/ykp
        Kf8qKyr/LC0s/y0uLf8uLy7/Li8u/y4vLv8uLy7/Li8u/y4vLv8uLy7/Li8u/y4vLv8uLy7/Li8u/y4v
        Lv8tLi3/j5KP+urv6xvq7+uB6u/r9urv68nq7+tv6u/rDBUVFQATExMAExMTABMUEwAUFRQAFxgXJxsb
        G/kcHRz/Hh4e/yAhIP8jJCP/Jygn/yssK/8uLy7/LzAv/y8wL/8vMC//LzAv/y8wL/8vMC//LzAv/y8w
        L/8vMC//LzAv/y8wL/8yMzL/wsfDiRkZGYElJiX6U1VT/5ebmP/f5ODi6u/rJxkaGQAaGhoA6u/rEurv
        6zPq7+tL6u/rUbG1skFVV1VGHR4dZhwdHKsfHx/xIiMi/ykpKf8uLy7/MDEw/zEyMf8xMjH/MTIx/zEy
        Mf8xMjH/MTIx/zEyMf8xMjH/MTIx/y8wL/+BhIHl6u/rABsbG3gmJyb/LzAv/0ZHRv/Lz8zw6u/riurv
        69Ld4d3/xMjF/7K2s/+usa//xMjF/9jd2f/q7+vb6u/riqOmpCscHRxyHyAf6yUmJf8tLi3/MTIx/zIz
        Mv8yMzL/MjMy/zIzMv8yMzL/MjMy/zIzMv8yMzL/MTIx/01PTvvq7+sAFxcXAC4uLsotLi3/MzQz/z9A
        P/+GiYb/UlNS/zM0M/8zNDP/MzQz/zM0M/8zNDP/MzQz/0xOTP+FiIX/1NjU/Orv65NlZ2YXHR4driQl
        JP8tLi3/MjMy/zM0M/8zNDP/MzQz/zM0M/8zNDP/MzQz/zM0M/8yMzL/Nzg3/urv6wAYGBgATE5NQS8w
        L/81NjX/NTY1/zU2Nf81NjX/NTY1/zU2Nf81NjX/NTY1/zU2Nf81NjX/NTY1/zU2Nf82Nzb/f4KA/+Ln
        49nq7+seHh4edSYmJv8wMTD/NTY1/zU2Nf81NjX/NTY1/zU2Nf81NjX/NTY1/zM0M/8zMzP86u/rAOrv
        6wzZ3trSPj8+/zY3Nv82Nzb/Njc2/zY3Nv82Nzb/Njc2/zY3Nv82Nzb/Njc2/zY3Nv82Nzb/Njc2/zY3
        Nv82Nzb/T1FP/9HV0eLq7+sYHx8feykqKf8zNDP/Njc2/zY3Nv82Nzb/Njc2/zY3Nv82Nzb/MjMy/zo7
        Ourq7+sA29/cm1VXVv83ODf/Nzg3/zc4N/83ODf/Nzg3/zc4N/83ODf/Nzg3/zc4N/83ODf/Nzg3/zc4
        N/83ODf/Nzg3/zc4N/83ODf/S0xL/9HW0rseHx4AKy0rxi8wL/82Nzb/Nzg3/zc4N/83ODf/Nzg3/zY3
        Nv8vLy//ODg4nOrv6yp9f37/ODk4/zk6Of85Ojn/OTo5/zk6Of85Ojn/OTo5/zk6Of85Ojn/OTo5/zk6
        Of85Ojn/OTo5/zk6Of85Ojn/OTo5/zk6Of84OTj/aGpo/+rv60ggICAkLC4t/jY3Nv85Ojn/OTo5/zk6
        Of85Ojn/NDU0/yorKv4cHBwnt7q3nTY3Nv86Ozr/Ojs6/zo7Ov86Ozr/Ojs6/zo7Ov86Ozr/Ojs6/zo7
        Ov86Ozr/Ojs6/zo7Ov86Ozr/Ojs6/zo7Ov86Ozr/Ojs6/zo7Ov83ODf/o6ajwSAgIABERUTJNTY1/zo7
        Ov86Ozr/Ojs6/zY3Nv8sLSz/JiYmlBkZGQB4ennlOTo5/zs8O/87PDv/Ozw7/zs8O/87PDv/Ozw7/zs8
        O/87PDv/Ozw7/zs8O/87PDv/Ozw7/zs8O/87PDv/Ozw7/zs8O/87PDv/Ozw7/zo7Ov9rbWv2ISIhAFJT
        UnU0NTT/Ozw7/zk6Of81NjX/LC0s/yQlJMkaGhoJGBgYAFdZV/k8PTz/PT49/z0+Pf89Pj3/PT49/z0+
        Pf89Pj3/PT49/z0+Pf89Pj3/PT49/z0+Pf89Pj3/PT49/z0+Pf89Pj3/PT49/z0+Pf89Pj3/PT49/0ZI
        Rv/q7+sGV1lYOTIzMv83ODf/MjMy/ykqKf8gISC9GhsaDxkZGQAYGRgAQ0ND+zw9PP8+Pz7/Pj8+/z4/
        Pv8+Pz7/Pj8+/z4/Pv8+Pz7/Pj8+/z4/Pv8+Pz7/Pj8+/z4/Pv8+Pz7/Pj8+/z4/Pv8+Pz7/Pj8+/z4/
        Pv8+Pz7/NDU0/4aJhwyPko8oKSop/yoqKv8kJSTxHR4dchoaGgAZGRkAGRkZABkZGQBERET1PD08/z9A
        P/8/QD//P0A//z9AP/8/QD//P0A//z9AP/8/QD//P0A//z9AP/8/QD//P0A//z9AP/8/QD//P0A//z9A
        P/8/QD//P0A//z0+Pf8yMzL/ISIhBhscGxgeHh69HR4dbxobGgwZGhkAGRoZABkaGQAZGhkAGRoZAERF
        RNY7PDv/QUJB/0FCQf9BQkH/QUJB/0FCQf9BQkH/QUJB/0FCQf9BQkH/QUJB/0FCQf9BQkH/QUJB/0FC
        Qf9BQkH/QUJB/0FCQf9BQkH/PD08/z09Pe4fIB8AGhoaABoaGgAaGhoAGhoaABoaGgAaGhoAGhoaABoa
        GgAaGhoANDY1cjY2Nv9AQUD/QkNC/0JDQv9CQ0L/QkNC/0JDQv9CQ0L/QkNC/0JDQv9CQ0L/QkNC/0JD
        Qv9CQ0L/QkNC/0JDQv9CQ0L/QkNC/0FCQf83ODf/Ojs6mRwdHAAaGxoAGhsaABobGgAaGxoAGhsaABob
        GgAaGxoAGhsaABobGgAfIB8PMTIx9Ds8O/9CQ0L/Q0RD/0NEQ/9DREP/Q0RD/0NEQ/9DREP/Q0RD/0NE
        Q/9DREP/Q0RD/0NEQ/9DREP/Q0RD/0NEQ/9CQ0L/PD08/zAxMPwgISAhGxsbABsbGwAbGxsAGxsbABsb
        GwAbGxsAGxsbABsbGwAbGxsAGxsbAOrv6wAiIyJdMDAw/z09Pf9DREP/REVE/0RFRP9ERUT/REVE/0RF
        RP9ERUT/REVE/0RFRP9ERUT/REVE/0RFRP9ERUT/Q0RD/z0+Pf8xMjH/JycnfR0dHQAbHBsAGxwbABsc
        GwAbHBsAGxwbABscGwAbHBsAGxwbABscGwAbHBsA6u/rAB0dHQAjJCONLzAv/zo7Ov9BQkH/REVE/0VG
        Rf9FRkX/RUZF/0VGRf9FRkX/RUZF/0VGRf9FRkX/REVE/0JDQv88PDz/MTEx/ycnJ6YdHh0DHBwcABwc
        HAAcHBwAHBwcABwcHAAcHBwAHBwcABwcHAAcHBwAHBwcABwcHADq7+sAHBwcAB0eHQAiIyJ4LCws+jU2
        Nf88PTz/QUFB/0NEQ/9FRkX/RkdG/0ZHRv9FRkX/Q0RD/0FCQf89Pj3/Njc2/ywtLP8jIyONHR4dAxwc
        HAAcHBwAHBwcABwcHAAcHBwAHBwcABwcHAAcHBwAHBwcABwcHAAcHBwAHBwcAOrv6wAcHRwAHB0cAB0d
        HQAfIB8tJCUkvSsrK/8xMjH/Njc2/zo7Ov88PTz/PD08/zo7Ov83ODf/MjMy/ywsLP8lJiXGICAgPx0d
        HQAcHRwAHB0cABwdHAAcHRwAHB0cABwdHAAcHRwAHB0cABwdHAAcHRwAHB0cABwdHAAcHRwA6u/rABwd
        HAAcHRwAHB0cABwdHAAdHR0AHx8fMCIiIn4kJSS9JiYm5CcnJ/8nJyf/JiYm6iQlJMMiIiKEHx8fOR0d
        HQAcHRwAHB0cABwdHAAcHRwAHB0cABwdHAAcHRwAHB0cABwdHAAcHRwAHB0cABwdHAAcHRwAHB0cABwd
        HAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/////////+D////A//8AAf/8AAH/8AAD/+AAAf/gAAH/wAAAB8AAAAMA
        AACAAAAAwAAAAMAAAACAAAAAgAAEAAAAAAAAAAIBAAACAQAAAAMAAAAPAAAAHwAAA/8AAAP/AAAD/4AA
        B//AAAf/4AAP//AAP//8AP////////////8=
</value>
  </data>
</root>